{"version":3,"sources":["utils/constants.ts","api/api.ts","utils/theme/theme.ts","utils/helpers.ts","components/Button.tsx","components/ArrowButton.tsx","components/Popover.tsx","components/Text.tsx","components/Slider/items/Description.tsx","components/Slider/items/Slide.tsx","components/Slider/Slider.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Direction","Api","source","axios","CancelToken","apiConnector","create","baseURL","process","REACT_APP_PROXY_URL","REACT_APP_API_URL","headers","Accept","params","api_token","REACT_APP_API_KEY","limit","cancelToken","this","token","getProducts","a","get","response","responseData","data","cancelRequest","cancel","theme","arrow","borderRadius","size","shift","marginShift","colors","white","util","lightGrey","disabled","main","accent","secondary","font","default","large","subtitle","small","popover","minSize","cardBorderRadius","PRODUCTS_STORAGE_KEY","styled","button","p","scaled","Arrow","Button","direction","RIGHT","ArrowButton","onClick","PopoverWrapper","div","PopoverContainer","PopoverImage","imageURL","Popover","children","useState","visible","setVisible","togglePopoverVisibility","e","preventDefault","currentVisible","onMouseEnter","onMouseLeave","Text","Container","TextWrapper","TextComponent","ExpandButton","Description","isExpanded","description","onExpandToggle","popoverImage","text","length","txt","substring","match","slice","getEllipsis","style","display","marginRight","color","title","ImageWrapper","Image","mainImageURL","Content","TitleWrapper","TitleText","Title","Subtitle","Slide","titleProp","images","descExpanded","setDescExpanded","setPopoverImage","split","join","getTitleAndSubtitle","useEffect","img","array","blacklistItem","items","Set","filter","item","JSON","stringify","Math","floor","random","getRandomArrayItem","expanded","Wrapper","Carousel","translation","Slider","slides","autoplayInSeconds","slideIndex","setSlideIndex","timeoutRef","useRef","clearTimeoutRef","current","clearTimeout","lastSlideIdx","handleNextSlide","useCallback","idx","handlePrevSlide","setTimeout","LEFT","map","slide","main_image","name","id","Header","header","App","storedProducts","localStorageItems","localStorage","getItem","parse","getStoredProducts","products","setProducts","error","setError","setItem","message","fetchProducts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAIYA,E,uHC4BCC,EAAM,I,iDA5BPC,OAASC,IAAMC,YAAYF,S,KAE3BG,aAAeF,IAAMG,OAAO,CAChCC,QAAQ,GAAD,OAAKC,mIAAYC,qBAAjB,OAAuCD,mIAAYE,mBAC1DC,QAAS,CACL,eAAgB,mBAChBC,OAAQ,mBACR,mBAAoB,kBAExBC,OAAQ,CACJC,UAAWN,mIAAYO,kBACvBC,MAAO,GACPC,YAAaC,KAAKhB,OAAOiB,S,KAI1BC,Y,sBAAc,8BAAAC,EAAA,sEACuB,EAAKhB,aAAaiB,IAAI,YAD7C,cACXC,EADW,OAEXC,EAAwBD,EAASE,KAFtB,kBAIVD,EAAaC,MAJH,2C,KAOdC,cAAgB,WACf,EAAKxB,QAAQ,EAAKA,OAAOyB,WC1B/BC,EAAsB,CACxBC,MAAO,CACHC,aAAc,MACdC,KAAM,OACNC,MAAO,OACPC,YAAa,OAEjBC,OAAQ,CACJC,MAAO,OACPC,KAAM,UACNC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,OAAQ,UACRC,UAAW,WAEfC,KAAM,CACFC,QAAS,OACTC,MAAO,UACPC,SAAU,SACVC,MAAO,WAEXC,QAAS,CACLhB,KAAM,SACNiB,QAAS,UAEbC,iBAAkB,Q,QF5BTC,EAAuB,Y,SAIxBlD,O,iBAAAA,I,gBAAAA,M,KGDL,I,WCGQmD,MAAOC,OAAtB,iRAUqB,SAACC,GAAD,OAAOA,EAAEC,QAAU,iB,OCFlCC,EAAQJ,YAAOK,EAAPL,CAAH,8WAKG,SAACE,GAAD,OAAOA,EAAEzB,MAAMC,MAAME,QACtB,SAACsB,GAAD,OAAOA,EAAEzB,MAAMC,MAAME,QAChB,SAACsB,GAAD,OAAQA,EAAEf,SAAWe,EAAEzB,MAAMM,OAAOI,SAAWe,EAAEzB,MAAMM,OAAOC,SAC3D,SAACkB,GAAD,OAAOA,EAAEzB,MAAMC,MAAMC,gBAC7B,SAACuB,GAAD,OAAOA,EAAEI,YAAczD,EAAU0D,OAASL,EAAEzB,MAAMC,MAAMG,SACzD,SAACqB,GAAD,OAAOA,EAAEI,YAAczD,EAAU0D,OAASL,EAAEzB,MAAMC,MAAMG,SAClC,SAACqB,GAAD,OAAOA,EAAEzB,MAAMM,OAAOE,QAGjC,SAACiB,GAAD,OAAQA,EAAEI,YAAczD,EAAU0D,MAAQ,GAAK,KAAOL,EAAEzB,MAAMC,MAAMI,eAC1E,SAACoB,GAAD,OAAOA,EAAEzB,MAAMM,OAAOE,QAYxBuB,I,MAAAA,EARf,YAA+F,IAAD,IAAvEF,iBAAuE,MAA3DzD,EAAU0D,MAAiD,EAA1CE,EAA0C,EAA1CA,QAAStB,EAAiC,EAAjCA,SACzD,OACI,cAACiB,EAAD,CAAOD,QAAM,EAACM,QAASA,EAASH,UAAWA,EAAWnB,SAAUA,EAAhE,SACKmB,IAAczD,EAAU0D,MAAQ,cAAC,IAAD,IAAqB,cAAC,IAAD,OC1B5DG,EAAiBV,IAAOW,IAAV,8JAYdC,EAAmBZ,IAAOW,IAAV,2TAGD,SAACT,GAAD,OAAOA,EAAEzB,MAAMqB,oBAClB,SAACI,GAAD,OAAOA,EAAEzB,MAAMmB,QAAQC,WACxB,SAACK,GAAD,OAAOA,EAAEzB,MAAMmB,QAAQC,WAC3B,SAACK,GAAD,OAAOA,EAAEzB,MAAMmB,QAAQhB,QACtB,SAACsB,GAAD,OAAOA,EAAEzB,MAAMmB,QAAQhB,QACF,SAACsB,GAAD,OAAOA,EAAEzB,MAAMM,OAAOG,aACvC,SAACgB,GAAD,OAAOA,EAAEzB,MAAMM,OAAOC,SAMlC6B,EAAeb,IAAOW,IAAV,gMAII,SAACT,GAAD,OAAOA,EAAEY,YAKhB,SAASC,EAAT,GAAkF,IAA/DD,EAA8D,EAA9DA,SAAUE,EAAoD,EAApDA,SAAoD,EAC9DC,oBAAS,GADqD,mBACrFC,EADqF,KAC5EC,EAD4E,KAGtFC,EAA0B,SAACC,GAC7BA,EAAEC,iBACFH,GAAW,SAACI,GAAD,OAAqBA,MAGpC,OACI,eAACb,EAAD,CAAgBc,aAAcJ,EAAyBK,aAAcL,EAArE,UACKJ,EACAE,GACG,cAACN,EAAD,UACI,cAACC,EAAD,CAAcC,SAAUA,S,sCCzD/BY,EAAO1B,IAAOE,EAAV,yFAGJ,SAACA,GAAD,OAAOA,EAAEzB,MAAMM,OAAOO,aCW7BqC,EAAY3B,IAAOW,IAAV,oLASTiB,EAAc5B,IAAOW,IAAV,kGAMXe,EAAO1B,YAAO6B,EAAP7B,CAAH,wGAEW,SAACE,GAAD,OAAOA,EAAEzB,MAAMc,KAAKI,SAInCmC,EAAe9B,YAAOK,EAAPL,CAAH,mDAIH,SAAS+B,GAAT,GAAsG,IAA/EC,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,eAAgBC,EAAqC,EAArCA,aACrEC,EAAOJ,EAAaC,ELhBH,SAACG,GACxB,GAAIA,EAAKC,QH1BiB,GG0BS,OAAOD,EAC1C,IAAME,EAAMF,EAAKG,UAAU,EH3BD,IG4BpBA,EAAYD,EAAIA,EAAID,OAAS,GAAGG,MAAM,MAAQF,EAAIG,MAAM,GAAI,GAAKH,EACvE,MAAM,GAAN,OAAUC,EAAV,OKYwCG,CAAYT,GAEpD,OACI,eAACN,EAAD,WACI,cAACC,EAAD,UACI,eAAC,EAAD,WACI,cAACb,EAAD,CAASD,SAAUqB,EAAnB,SACI,cAAC,IAAD,CACIvD,KAAM,GACN+D,MAAO,CAAEC,QAAS,eAAgBC,YAAa,GAC/CC,MAAOrE,EAAMM,OAAOM,WAG3B+C,OAGT,cAACN,EAAD,CAAciB,MAAQf,EAAwB,WAAX,SAAuBvB,QAASyB,EAAnE,SACMF,EAGE,cAAC,IAAD,CAAac,MAAOrE,EAAMM,OAAOM,SAFjC,cAAC,IAAD,CAAeyD,MAAOrE,EAAMM,OAAOM,cC/CvD,I,YAAMsC,GAAY3B,IAAOW,IAAV,6FAMTqC,GAAehD,IAAOW,IAAV,oEAKZsC,GAAQjD,IAAOW,IAAV,mKAIW,SAACT,GAAD,OAAOA,EAAEgD,gBAIzBC,GAAUnD,IAAOW,IAAV,mLASPyC,GAAepD,IAAOW,IAAV,yJAQZ0C,GAAYrD,YAAO0B,EAAP1B,CAAH,qFAKTsD,GAAQtD,YAAOqD,GAAPrD,CAAH,4FACM,SAACE,GAAD,OAAOA,EAAEzB,MAAMc,KAAKE,SACxB,SAACS,GAAD,OAAOA,EAAEzB,MAAMM,OAAOK,QAI7BmE,GAAWvD,YAAOqD,GAAPrD,CAAH,kEACG,SAACE,GAAD,OAAOA,EAAEzB,MAAMc,KAAKG,YACxB,SAACQ,GAAD,OAAOA,EAAEzB,MAAMM,OAAOM,UAwCpBmE,GArCD,SAAC,GAAkF,IAAzEC,EAAwE,EAA/EV,MAAkBd,EAA6D,EAA7DA,YAAaiB,EAAgD,EAAhDA,aAAcQ,EAAkC,EAAlCA,OAAkC,EACpDzC,oBAAS,GAD2C,mBACrF0C,EADqF,KACvEC,EADuE,OAEpD3C,mBAAiB,IAFmC,mBAErFkB,EAFqF,KAEvE0B,EAFuE,ONhC7D,SAACzB,GAChC,IAAME,EAAMF,EAAK0B,MAAM,KAGvB,MAAO,CAAEf,MAFmB,GAAdT,EAAID,OAAcD,EAAOE,EAAI,GAE3B5C,SADC4C,EAAID,OAAS,EAAIC,EAAIG,MAAM,GAAGsB,KAAK,IAAM,IMgC9BC,CAAoBP,GAAxCV,EAHoF,EAGpFA,MAAOrD,EAH6E,EAG7EA,SAEfuE,qBAAU,WACN,IAAK9B,EAAc,CACf,IAAM+B,ENxDgB,SAAIC,EAAYC,GAC9C,IAAMC,EAAQ,YAAI,IAAIC,IAAIH,IAAQI,QAAO,SAACC,GACtC,MAAuB,kBAATA,EACRA,IAASJ,EACTK,KAAKC,UAAUF,KAAUC,KAAKC,UAAUN,MAGlD,OAAOC,EADKM,KAAKC,MAAMD,KAAKE,SAAWR,EAAMhC,SMkDzByC,CAAmBpB,EAAQR,GACvCW,EAAgBK,MAErB,CAACR,EAAQR,EAAcf,IAM1B,OACI,eAAC,GAAD,WACI,cAACa,GAAD,UACI,cAACC,GAAD,CAAOC,aAAcA,MAEzB,eAACC,GAAD,WACI,eAACC,GAAD,WACI,cAACE,GAAD,UAAQP,IACPrD,GAAY,cAAC6D,GAAD,UAAW7D,OAE5B,cAACqC,GAAD,CACIE,YAAaA,EACbC,eAhBK,WACjB0B,GAAgB,SAACmB,GAAD,OAAeA,MAgBnB/C,WAAY2B,EACZxB,aAAcA,WCnF5B6C,GAAUhF,IAAOW,IAAV,yLAUPgB,GAAY3B,IAAOW,IAAV,gLAKoB,SAACT,GAAD,OAAOA,EAAEzB,MAAMM,OAAOG,aACpC,SAACgB,GAAD,OAAOA,EAAEzB,MAAMqB,oBAG9BmF,GAAWjF,IAAOW,IAAV,mKAIe,SAACT,GAAD,OAAuB,IAAhBA,EAAEgF,eAI/B,SAASC,GAAT,GAAyF,IAAvEC,EAAsE,EAAtEA,OAAsE,IAA9DC,yBAA8D,MVrC9D,EUqC8D,IACvDpE,mBAAS,GAD8C,mBACpFqE,EADoF,KACxEC,EADwE,KAErFC,EAAaC,mBAEbC,EAAkB,WAChBF,EAAWG,SAASC,aAAaJ,EAAWG,UAG9CE,EAAeT,EAAO/C,OAAS,EAE/ByD,EAAkBC,uBAAY,WAChCL,IAEAH,GAAc,SAACS,GACX,OAAIA,IAAQH,EACD,EAGJG,EAAM,OAElB,CAACH,IAEEI,EAAkBF,uBAAY,WAChCL,IAEAH,GAAc,SAACS,GACX,OAAe,IAARA,EAAYH,EAAeG,EAAM,OAE7C,CAACH,IAQJ,OANA5B,qBAAU,WAGN,OAFAuB,EAAWG,QAAUO,WAAWJ,EAAqC,IAApBT,GAE1C,kBAAMK,OACd,CAACJ,EAAYD,EAAmBS,IAG/B,eAACd,GAAD,WACI,cAAC,EAAD,CAAa1E,UAAWzD,EAAUsJ,KAAM1F,QAASwF,IACjD,cAAC,GAAD,UACI,cAAChB,GAAD,CAAUC,YAAaI,EAAvB,SACKF,EAAOgB,KAAI,SAACC,GAAW,IACZC,EAA8CD,EAA9CC,WAAYC,EAAkCF,EAAlCE,KAAMtE,EAA4BoE,EAA5BpE,YAAayB,EAAe2C,EAAf3C,OAAQ8C,EAAOH,EAAPG,GAE/C,OACI,cAAC,GAAD,CAEItD,aAAcoD,EACdvD,MAAOwD,EACPtE,YAAaA,EACbyB,OAAQA,GAJH8C,UAUzB,cAAC,EAAD,CAAalG,UAAWzD,EAAU0D,MAAOE,QAASqF,OC7FvD,I,GAAMW,GAASzG,IAAO0G,OAAV,mRAID,SAACxG,GAAD,OAAOA,EAAEzB,MAAMM,OAAOK,QAC3B,SAACc,GAAD,OAAOA,EAAEzB,MAAMM,OAAOC,SAGlB,SAACkB,GAAD,OAAOA,EAAEzB,MAAMc,KAAKE,SAEF,SAACS,GAAD,OAAOA,EAAEzB,MAAMM,OAAOG,aCJnDyC,GAAY3B,IAAOZ,KAAV,0MAgDAuH,OAvCf,WACI,IAAMC,EAAiB,kBTPM,WAC7B,IAAMC,EAAoBC,aAAaC,QAAQhH,GAC/C,OAAO8G,EAAoBpC,KAAKuC,MAAMH,GAAqB,GSK9BI,IADJ,EAEOhG,mBAAsB2F,GAF7B,mBAElBM,EAFkB,KAERC,EAFQ,OAGClG,qBAHD,mBAGlBmG,EAHkB,KAGXC,EAHW,KAyBzB,OApBApD,qBAAU,WAiBN,OAhBmB,uCAAG,8BAAA/F,EAAA,+EAEKpB,EAAImB,cAFT,OAERK,EAFQ,OAGR4I,GAAsC5I,GTtBhC,IAAI8H,KAAI,SAAC5B,GAG7B,MAAO,CAAE+B,KAF6C/B,EAA9C+B,KAEOtE,YAFuCuC,EAAxCvC,YAEcqE,WAF0B9B,EAA3B8B,WAEa5C,OAFcc,EAAfd,OAES8C,GAFMhC,EAAPgC,OSuBvCW,EAAYD,GAEYN,IACHvE,QAAQyE,aAAaQ,QAAQvH,EAAsB0E,KAAKC,UAAUwC,IARzE,kDAUdG,EAAS,KAAME,SAVD,0DAAH,oDAcnBC,GAEO,kBAAM1K,EAAIyB,mBAClB,IAEC6I,EAAc,8BAAMA,IAEnBF,EAAS7E,QAAW+E,EAGrB,eAAC,IAAD,CAAe3I,MAAOA,EAAtB,UACI,cAACgI,GAAD,qBACA,cAAC,GAAD,UACI,cAACtB,GAAD,CAAQC,OAAQ8B,EAAU7B,kBAAmB,SANlB,8CC9B5BoC,GAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5Bb,O","file":"static/js/main.0c3061e3.chunk.js","sourcesContent":["export const PRODUCTS_STORAGE_KEY = 'products';\r\nexport const ELIPSIS_LENGHT = 30;\r\nexport const AUTOPLAY_DURATION = 3;\r\n\r\nexport enum Direction {\r\n    RIGHT,\r\n    LEFT,\r\n}\r\n","import axios from 'axios';\r\nimport { ApiItem, ApiResponseType } from 'utils/types';\r\n\r\nclass ApiService {\r\n    private source = axios.CancelToken.source();\r\n\r\n    private apiConnector = axios.create({\r\n        baseURL: `${process.env.REACT_APP_PROXY_URL}${process.env.REACT_APP_API_URL}`,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n        },\r\n        params: {\r\n            api_token: process.env.REACT_APP_API_KEY,\r\n            limit: 20,\r\n            cancelToken: this.source.token,\r\n        },\r\n    });\r\n\r\n    public getProducts = async (): Promise<ApiItem[]> => {\r\n        const response: ApiResponseType = await this.apiConnector.get('products');\r\n        const responseData: ApiItem = response.data;\r\n\r\n        return responseData.data;\r\n    };\r\n\r\n    public cancelRequest = () => {\r\n        if (this.source) this.source.cancel();\r\n    };\r\n}\r\n\r\nexport const Api = new ApiService();\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst theme: DefaultTheme = {\r\n    arrow: {\r\n        borderRadius: '50%',\r\n        size: '30px',\r\n        shift: '12px',\r\n        marginShift: '2px',\r\n    },\r\n    colors: {\r\n        white: '#fff',\r\n        util: '#495057',\r\n        lightGrey: '#adb5bd',\r\n        disabled: '#e9ecef',\r\n        main: '#34435E',\r\n        accent: '#648DE5',\r\n        secondary: '#304C89',\r\n    },\r\n    font: {\r\n        default: '1rem',\r\n        large: '1.82rem',\r\n        subtitle: '1.1rem',\r\n        small: '0.92rem',\r\n    },\r\n    popover: {\r\n        size: '32vmin',\r\n        minSize: '32vmin',\r\n    },\r\n    cardBorderRadius: '22px',\r\n};\r\n\r\nexport { theme };\r\n","import { ELIPSIS_LENGHT, PRODUCTS_STORAGE_KEY } from './constants';\r\nimport { ApiResponseType, SlideType } from './types';\r\n\r\nexport const mapResponseDataToSlideType = (responseData: ApiResponseType['data']): SlideType[] => {\r\n    return (responseData || []).map((item) => {\r\n        const { name, description, main_image, images, id } = item;\r\n\r\n        return { name, description, main_image, images, id };\r\n    });\r\n};\r\n\r\nexport const getStoredProducts = (): SlideType[] => {\r\n    const localStorageItems = localStorage.getItem(PRODUCTS_STORAGE_KEY);\r\n    return localStorageItems ? JSON.parse(localStorageItems) : [];\r\n};\r\n\r\nexport const getRandomArrayItem = <T>(array: T[], blacklistItem?: T): T => {\r\n    const items = [...new Set(array)].filter((item) => {\r\n        return typeof item !== 'object'\r\n            ? item !== blacklistItem\r\n            : JSON.stringify(item) !== JSON.stringify(blacklistItem);\r\n    });\r\n    const idx = Math.floor(Math.random() * items.length);\r\n    return items[idx];\r\n};\r\n\r\nexport const getEllipsis = (text: string): string => {\r\n    if (text.length <= ELIPSIS_LENGHT) return text;\r\n    const txt = text.substring(0, ELIPSIS_LENGHT);\r\n    const substring = txt[txt.length - 1].match(/\\W/) ? txt.slice(0, -1) : txt;\r\n    return `${substring}...`;\r\n};\r\n\r\nexport const getTitleAndSubtitle = (text: string): { title: string; subtitle?: string } => {\r\n    const txt = text.split(',');\r\n    const title = txt.length == 1 ? text : txt[0];\r\n    const subtitle = txt.length > 1 ? txt.slice(1).join('') : '';\r\n    return { title, subtitle };\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n    scaled?: boolean;\r\n}\r\n\r\nexport default styled.button<Props>`\r\n    text-decoration: none;\r\n    border: none;\r\n    transition: transform 0.5s;\r\n    background-color: transparent;\r\n    border-radius: 4px;\r\n    text-transform: capitalize;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transform: ${(p) => p.scaled && 'scale(1.12)'};\r\n    }\r\n`;\r\n","import React, { ReactElement } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { Direction } from 'utils';\r\nimport Button from './Button';\r\n\r\ninterface Props {\r\n    direction: typeof Direction.RIGHT | typeof Direction.LEFT;\r\n    onClick: () => void;\r\n    disabled?: boolean;\r\n}\r\n\r\ntype StyledComponentProps = Pick<Props, 'direction'>;\r\n\r\nconst Arrow = styled(Button)<StyledComponentProps>`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    height: ${(p) => p.theme.arrow.size};\r\n    width: ${(p) => p.theme.arrow.size};\r\n    background: ${(p) => (p.disabled ? p.theme.colors.disabled : p.theme.colors.white)};\r\n    border-radius: ${(p) => p.theme.arrow.borderRadius};\r\n    right: ${(p) => p.direction === Direction.RIGHT && p.theme.arrow.shift};\r\n    left: ${(p) => p.direction !== Direction.RIGHT && p.theme.arrow.shift};\r\n    box-shadow: 0px 0px 3px 1px ${(p) => p.theme.colors.util};\r\n    z-index: 10;\r\n    svg {\r\n        margin-left: ${(p) => (p.direction === Direction.RIGHT ? '' : '-') + p.theme.arrow.marginShift};\r\n        color: ${(p) => p.theme.colors.util};\r\n    }\r\n`;\r\n\r\nfunction ArrowButton({ direction = Direction.RIGHT, onClick, disabled }: Props): ReactElement {\r\n    return (\r\n        <Arrow scaled onClick={onClick} direction={direction} disabled={disabled}>\r\n            {direction === Direction.RIGHT ? <FaChevronRight /> : <FaChevronLeft />}\r\n        </Arrow>\r\n    );\r\n}\r\n\r\nexport default ArrowButton;\r\n","import React, { ReactElement, PropsWithChildren, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    imageURL: string;\r\n}\r\n\r\ntype PopoverMouseEvent = React.MouseEvent<HTMLDivElement, MouseEvent>;\r\ntype PopoverMouseHandler = (e: PopoverMouseEvent) => void;\r\n\r\nconst PopoverWrapper = styled.div<{\r\n    onMouseEnter: PopoverMouseHandler;\r\n    onMouseLeave: PopoverMouseHandler;\r\n}>`\r\n    position: relative;\r\n    display: inline-block;\r\n    transition: 0.1s;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\n\r\nconst PopoverContainer = styled.div`\r\n    padding: 10px;\r\n    z-index: 5;\r\n    border-radius: ${(p) => p.theme.cardBorderRadius};\r\n    min-height: ${(p) => p.theme.popover.minSize};\r\n    min-width: ${(p) => p.theme.popover.minSize};\r\n    width: ${(p) => p.theme.popover.size};\r\n    height: ${(p) => p.theme.popover.size};\r\n    box-shadow: 0px 0px 12px 4px ${(p) => p.theme.colors.lightGrey};\r\n    background: ${(p) => p.theme.colors.white};\r\n    position: absolute;\r\n    transform: translate(7%, -107%);\r\n    transition: 0.2s;\r\n`;\r\n\r\nconst PopoverImage = styled.div<Props>`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 6;\r\n    background: url(${(p) => p.imageURL}) no-repeat center;\r\n    background-size: cover;\r\n    background-origin: content-box;\r\n`;\r\n\r\nexport default function Popover({ imageURL, children }: PropsWithChildren<Props>): ReactElement {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const togglePopoverVisibility = (e: PopoverMouseEvent) => {\r\n        e.preventDefault();\r\n        setVisible((currentVisible) => !currentVisible);\r\n    };\r\n\r\n    return (\r\n        <PopoverWrapper onMouseEnter={togglePopoverVisibility} onMouseLeave={togglePopoverVisibility}>\r\n            {children}\r\n            {visible && (\r\n                <PopoverContainer>\r\n                    <PopoverImage imageURL={imageURL} />\r\n                </PopoverContainer>\r\n            )}\r\n        </PopoverWrapper>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Text = styled.p`\r\n    margin: 4px 0;\r\n    font-weight: bold;\r\n    color: ${(p) => p.theme.colors.secondary};\r\n`;\r\n","import Button from 'components/Button';\r\nimport React, { ReactElement } from 'react';\r\nimport { getEllipsis, theme } from 'utils';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\nimport Popover from 'components/Popover';\r\nimport { BsFillImageFill } from 'react-icons/bs';\r\nimport { Text as TextComponent } from '../../Text';\r\n\r\ninterface Props {\r\n    description: string;\r\n    isExpanded?: boolean;\r\n    popoverImage: string;\r\n    onExpandToggle: () => void;\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    white-space: normal;\r\n    padding: 0 8px;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n    width: 95%;\r\n    position: relative;\r\n    display: inline-block;\r\n`;\r\n\r\nconst Text = styled(TextComponent)`\r\n    @media screen and (max-width: 600px) {\r\n        font-size: ${(p) => p.theme.font.small};\r\n    }\r\n`;\r\n\r\nconst ExpandButton = styled(Button)`\r\n    margin-top: 12px;\r\n`;\r\n\r\nexport default function Description({ isExpanded, description, onExpandToggle, popoverImage }: Props): ReactElement {\r\n    const text = isExpanded ? description : getEllipsis(description);\r\n\r\n    return (\r\n        <Container>\r\n            <TextWrapper>\r\n                <Text>\r\n                    <Popover imageURL={popoverImage}>\r\n                        <BsFillImageFill\r\n                            size={18}\r\n                            style={{ display: 'inline-block', marginRight: 4 }}\r\n                            color={theme.colors.accent}\r\n                        />\r\n                    </Popover>\r\n                    {text}\r\n                </Text>\r\n            </TextWrapper>\r\n            <ExpandButton title={!isExpanded ? 'Expand' : 'Collapse'} onClick={onExpandToggle}>\r\n                {!isExpanded ? (\r\n                    <FaChevronDown color={theme.colors.accent} />\r\n                ) : (\r\n                    <FaChevronUp color={theme.colors.accent} />\r\n                )}\r\n            </ExpandButton>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getRandomArrayItem, getTitleAndSubtitle } from 'utils';\r\nimport Description from './Description';\r\nimport { Text } from '../../Text';\r\n\r\ninterface Props {\r\n    title: string;\r\n    description: string;\r\n    mainImageURL: string;\r\n    images: string[];\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: inline-block;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    height: 65%;\r\n    padding: 22px 0;\r\n`;\r\n\r\nconst Image = styled.div<Pick<Props, 'mainImageURL'>>`\r\n    width: 100%;\r\n    height: 100%;\r\n    max-height: 100%;\r\n    background: url(${(p) => p.mainImageURL}) no-repeat center;\r\n    background-size: contain;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    height: 35%;\r\n    padding: 8px 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 4px 0;\r\n`;\r\n\r\nconst TitleText = styled(Text)`\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n`;\r\n\r\nconst Title = styled(TitleText)`\r\n    font-size: ${(p) => p.theme.font.large};\r\n    color: ${(p) => p.theme.colors.main};\r\n    letter-spacing: 1px;\r\n`;\r\n\r\nconst Subtitle = styled(TitleText)`\r\n    font-size: ${(p) => p.theme.font.subtitle};\r\n    color: ${(p) => p.theme.colors.accent};\r\n`;\r\n\r\nconst Slide = ({ title: titleProp, description, mainImageURL, images }: Props): ReactElement => {\r\n    const [descExpanded, setDescExpanded] = useState(false);\r\n    const [popoverImage, setPopoverImage] = useState<string>('');\r\n    const { title, subtitle } = getTitleAndSubtitle(titleProp);\r\n\r\n    useEffect(() => {\r\n        if (!popoverImage) {\r\n            const img = getRandomArrayItem(images, mainImageURL);\r\n            setPopoverImage(img);\r\n        }\r\n    }, [images, mainImageURL, popoverImage]);\r\n\r\n    const handleExpand = () => {\r\n        setDescExpanded((expanded) => !expanded);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <ImageWrapper>\r\n                <Image mainImageURL={mainImageURL} />\r\n            </ImageWrapper>\r\n            <Content>\r\n                <TitleWrapper>\r\n                    <Title>{title}</Title>\r\n                    {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n                </TitleWrapper>\r\n                <Description\r\n                    description={description}\r\n                    onExpandToggle={handleExpand}\r\n                    isExpanded={descExpanded}\r\n                    popoverImage={popoverImage}\r\n                />\r\n            </Content>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Slide;\r\n","import ArrowButton from 'components/ArrowButton';\r\nimport React, { ReactElement, useCallback, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AUTOPLAY_DURATION, Direction } from 'utils';\r\nimport { SlideType } from 'utils/types';\r\nimport Slide from './items/Slide';\r\n\r\ninterface Props {\r\n    slides: SlideType[];\r\n    autoplayInSeconds?: number;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    min-width: 300px;\r\n    height: 90%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    max-width: 92%;\r\n    width: 92%;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    box-shadow: 0px 0px 12px 4px ${(p) => p.theme.colors.lightGrey};\r\n    border-radius: ${(p) => p.theme.cardBorderRadius};\r\n`;\r\n\r\nconst Carousel = styled.div<{ translation: number }>`\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    transform: translateX(-${(p) => p.translation * 100}%);\r\n    transition: ease-in-out 0.5s;\r\n`;\r\n\r\nexport function Slider({ slides, autoplayInSeconds = AUTOPLAY_DURATION }: Props): ReactElement {\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    const timeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n    const clearTimeoutRef = () => {\r\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n    };\r\n\r\n    const lastSlideIdx = slides.length - 1;\r\n\r\n    const handleNextSlide = useCallback(() => {\r\n        clearTimeoutRef();\r\n\r\n        setSlideIndex((idx) => {\r\n            if (idx === lastSlideIdx) {\r\n                return 0;\r\n            }\r\n\r\n            return idx + 1;\r\n        });\r\n    }, [lastSlideIdx]);\r\n\r\n    const handlePrevSlide = useCallback(() => {\r\n        clearTimeoutRef();\r\n\r\n        setSlideIndex((idx) => {\r\n            return idx === 0 ? lastSlideIdx : idx - 1;\r\n        });\r\n    }, [lastSlideIdx]);\r\n\r\n    useEffect(() => {\r\n        timeoutRef.current = setTimeout(handleNextSlide, autoplayInSeconds * 1000);\r\n\r\n        return () => clearTimeoutRef();\r\n    }, [slideIndex, autoplayInSeconds, handleNextSlide]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ArrowButton direction={Direction.LEFT} onClick={handlePrevSlide} />\r\n            <Container>\r\n                <Carousel translation={slideIndex}>\r\n                    {slides.map((slide) => {\r\n                        const { main_image, name, description, images, id } = slide;\r\n\r\n                        return (\r\n                            <Slide\r\n                                key={id}\r\n                                mainImageURL={main_image}\r\n                                title={name}\r\n                                description={description}\r\n                                images={images}\r\n                            />\r\n                        );\r\n                    })}\r\n                </Carousel>\r\n            </Container>\r\n            <ArrowButton direction={Direction.RIGHT} onClick={handleNextSlide} />\r\n        </Wrapper>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n    position: fixed;\r\n    padding: 5vmin 1rem;\r\n    width: 100%;\r\n    background: ${(p) => p.theme.colors.main};\r\n    color: ${(p) => p.theme.colors.white};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: ${(p) => p.theme.font.large};\r\n    font-weight: 700;\r\n    box-shadow: 0px 0px 12px 2px ${(p) => p.theme.colors.lightGrey};\r\n`;\r\n","import styled, { ThemeProvider } from 'styled-components';\r\nimport React, { ReactElement, useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { Api } from 'api/api';\r\nimport { SlideType } from 'utils/types';\r\nimport { PRODUCTS_STORAGE_KEY, theme, getStoredProducts, mapResponseDataToSlideType } from 'utils';\r\nimport { Slider, Header } from 'components';\r\n\r\nconst Container = styled.main`\r\n    margin: calc(2 * 5vmin + 2rem) auto 5vmin;\r\n    padding: 42px 22px 22px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nfunction App(): ReactElement {\r\n    const storedProducts = () => getStoredProducts();\r\n    const [products, setProducts] = useState<SlideType[]>(storedProducts);\r\n    const [error, setError] = useState<string | undefined>();\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const data = await Api.getProducts();\r\n                const products = mapResponseDataToSlideType(data);\r\n\r\n                setProducts(products);\r\n\r\n                const storageProducts = storedProducts();\r\n                if (!storageProducts.length) localStorage.setItem(PRODUCTS_STORAGE_KEY, JSON.stringify(products));\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n\r\n        return () => Api.cancelRequest();\r\n    }, []);\r\n\r\n    if (error) return <div>{error}</div>;\r\n\r\n    if (!products.length && !error) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header>Slider</Header>\r\n            <Container>\r\n                <Slider slides={products} autoplayInSeconds={5} />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}