{"version":3,"sources":["utils/constants.ts","api/api.ts","utils/theme/theme.ts","utils/helpers.ts","components/Button.tsx","components/ArrowButton.tsx","components/Popover.tsx","components/Text.tsx","components/Slider/items/Description.tsx","components/Slider/items/Slide.tsx","components/Slider/Slider.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Direction","Api","source","axios","CancelToken","apiConnector","create","baseURL","process","headers","Accept","params","api_token","limit","cancelToken","this","token","getProducts","a","get","response","responseData","data","cancelRequest","cancel","theme","arrow","borderRadius","size","shift","marginShift","colors","white","util","lightGrey","disabled","main","accent","secondary","font","default","large","subtitle","small","popover","minSize","cardBorderRadius","PRODUCTS_STORAGE_KEY","styled","button","p","scaled","Arrow","Button","direction","RIGHT","ArrowButton","onClick","PopoverWrapper","div","PopoverContainer","PopoverImage","imageURL","Popover","children","useState","visible","setVisible","togglePopoverVisibility","e","preventDefault","currentVisible","onMouseEnter","onMouseLeave","Text","Container","TextWrapper","TextComponent","ExpandButton","Description","isExpanded","description","onExpandToggle","popoverImage","text","length","txt","substring","match","slice","getEllipsis","style","display","marginRight","color","title","ImageWrapper","Image","mainImageURL","Content","TitleWrapper","TitleText","Title","Subtitle","Slide","titleProp","images","descExpanded","setDescExpanded","setPopoverImage","split","join","getTitleAndSubtitle","useEffect","img","array","blacklistItem","items","Set","filter","item","JSON","stringify","Math","floor","random","getRandomArrayItem","expanded","Wrapper","Carousel","translation","Slider","slides","autoplayInSeconds","slideIndex","setSlideIndex","timeoutRef","useRef","clearTimeoutRef","current","clearTimeout","lastSlideIdx","handleNextSlide","useCallback","idx","handlePrevSlide","setTimeout","LEFT","map","slide","main_image","name","id","Header","header","App","storedProducts","localStorageItems","localStorage","getItem","parse","getStoredProducts","products","setProducts","error","setError","setItem","message","fetchProducts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be0dc623.chunk.js","sourcesContent":["export const PRODUCTS_STORAGE_KEY = 'products';\nexport const ELIPSIS_LENGHT = 30;\nexport const AUTOPLAY_DURATION = 3;\n\nexport enum Direction {\n    RIGHT,\n    LEFT,\n}\n","import axios from 'axios';\nimport { ApiItem, ApiResponseType } from 'utils/types';\n\nclass ApiService {\n    private source = axios.CancelToken.source();\n\n    private apiConnector = axios.create({\n        baseURL: `${process.env.REACT_APP_PROXY_URL}${process.env.REACT_APP_API_URL}`,\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        params: {\n            api_token: process.env.REACT_APP_API_KEY,\n            limit: 20,\n            cancelToken: this.source.token,\n        },\n    });\n\n    public getProducts = async (): Promise<ApiItem[]> => {\n        const response: ApiResponseType = await this.apiConnector.get('products');\n        const responseData: ApiItem = response.data;\n\n        return responseData.data;\n    };\n\n    public cancelRequest = () => {\n        if (this.source) this.source.cancel();\n    };\n}\n\nexport const Api = new ApiService();\n","import { DefaultTheme } from 'styled-components';\n\nconst theme: DefaultTheme = {\n    arrow: {\n        borderRadius: '50%',\n        size: '30px',\n        shift: '12px',\n        marginShift: '2px',\n    },\n    colors: {\n        white: '#fff',\n        util: '#495057',\n        lightGrey: '#adb5bd',\n        disabled: '#e9ecef',\n        main: '#34435E',\n        accent: '#648DE5',\n        secondary: '#304C89',\n    },\n    font: {\n        default: '1rem',\n        large: '1.82rem',\n        subtitle: '1.1rem',\n        small: '0.92rem',\n    },\n    popover: {\n        size: '32vmin',\n        minSize: '32vmin',\n    },\n    cardBorderRadius: '22px',\n};\n\nexport { theme };\n","import { ELIPSIS_LENGHT, PRODUCTS_STORAGE_KEY } from './constants';\nimport { ApiResponseType, SlideType } from './types';\n\nexport const mapResponseDataToSlideType = (responseData: ApiResponseType['data']): SlideType[] => {\n    return (responseData || []).map((item) => {\n        const { name, description, main_image, images, id } = item;\n\n        return { name, description, main_image, images, id };\n    });\n};\n\nexport const getStoredProducts = (): SlideType[] => {\n    const localStorageItems = localStorage.getItem(PRODUCTS_STORAGE_KEY);\n    return localStorageItems ? JSON.parse(localStorageItems) : [];\n};\n\nexport const getRandomArrayItem = <T>(array: T[], blacklistItem?: T): T => {\n    const items = [...new Set(array)].filter((item) => {\n        return typeof item !== 'object'\n            ? item !== blacklistItem\n            : JSON.stringify(item) !== JSON.stringify(blacklistItem);\n    });\n    const idx = Math.floor(Math.random() * items.length);\n    return items[idx];\n};\n\nexport const getEllipsis = (text: string): string => {\n    if (text.length <= ELIPSIS_LENGHT) return text;\n    const txt = text.substring(0, ELIPSIS_LENGHT);\n    const substring = txt[txt.length - 1].match(/\\W/) ? txt.slice(0, -1) : txt;\n    return `${substring}...`;\n};\n\nexport const getTitleAndSubtitle = (text: string): { title: string; subtitle?: string } => {\n    const txt = text.split(',');\n    const title = txt.length == 1 ? text : txt[0];\n    const subtitle = txt.length > 1 ? txt.slice(1).join('') : '';\n    return { title, subtitle };\n};\n","import styled from 'styled-components';\n\ninterface Props {\n    scaled?: boolean;\n}\n\nexport default styled.button<Props>`\n    text-decoration: none;\n    border: none;\n    transition: transform 0.5s;\n    background-color: transparent;\n    border-radius: 4px;\n    text-transform: capitalize;\n    cursor: pointer;\n\n    &:hover {\n        transform: ${(p) => p.scaled && 'scale(1.12)'};\n    }\n`;\n","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport { Direction } from 'utils';\nimport Button from './Button';\n\ninterface Props {\n    direction: typeof Direction.RIGHT | typeof Direction.LEFT;\n    onClick: () => void;\n    disabled?: boolean;\n}\n\ntype StyledComponentProps = Pick<Props, 'direction'>;\n\nconst Arrow = styled(Button)<StyledComponentProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    height: ${(p) => p.theme.arrow.size};\n    width: ${(p) => p.theme.arrow.size};\n    background: ${(p) => (p.disabled ? p.theme.colors.disabled : p.theme.colors.white)};\n    border-radius: ${(p) => p.theme.arrow.borderRadius};\n    right: ${(p) => p.direction === Direction.RIGHT && p.theme.arrow.shift};\n    left: ${(p) => p.direction !== Direction.RIGHT && p.theme.arrow.shift};\n    box-shadow: 0px 0px 3px 1px ${(p) => p.theme.colors.util};\n    z-index: 10;\n    svg {\n        margin-left: ${(p) => (p.direction === Direction.RIGHT ? '' : '-') + p.theme.arrow.marginShift};\n        color: ${(p) => p.theme.colors.util};\n    }\n`;\n\nfunction ArrowButton({ direction = Direction.RIGHT, onClick, disabled }: Props): ReactElement {\n    return (\n        <Arrow scaled onClick={onClick} direction={direction} disabled={disabled}>\n            {direction === Direction.RIGHT ? <FaChevronRight /> : <FaChevronLeft />}\n        </Arrow>\n    );\n}\n\nexport default ArrowButton;\n","import React, { ReactElement, PropsWithChildren, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n    imageURL: string;\n}\n\ntype PopoverMouseEvent = React.MouseEvent<HTMLDivElement, MouseEvent>;\ntype PopoverMouseHandler = (e: PopoverMouseEvent) => void;\n\nconst PopoverWrapper = styled.div<{\n    onMouseEnter: PopoverMouseHandler;\n    onMouseLeave: PopoverMouseHandler;\n}>`\n    position: relative;\n    display: inline-block;\n    transition: 0.1s;\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n\nconst PopoverContainer = styled.div`\n    padding: 10px;\n    z-index: 5;\n    border-radius: ${(p) => p.theme.cardBorderRadius};\n    min-height: ${(p) => p.theme.popover.minSize};\n    min-width: ${(p) => p.theme.popover.minSize};\n    width: ${(p) => p.theme.popover.size};\n    height: ${(p) => p.theme.popover.size};\n    box-shadow: 0px 0px 12px 4px ${(p) => p.theme.colors.lightGrey};\n    background: ${(p) => p.theme.colors.white};\n    position: absolute;\n    transform: translate(7%, -107%);\n    transition: 0.2s;\n`;\n\nconst PopoverImage = styled.div<Props>`\n    width: 100%;\n    height: 100%;\n    z-index: 6;\n    background: url(${(p) => p.imageURL}) no-repeat center;\n    background-size: cover;\n    background-origin: content-box;\n`;\n\nexport default function Popover({ imageURL, children }: PropsWithChildren<Props>): ReactElement {\n    const [visible, setVisible] = useState(false);\n\n    const togglePopoverVisibility = (e: PopoverMouseEvent) => {\n        e.preventDefault();\n        setVisible((currentVisible) => !currentVisible);\n    };\n\n    return (\n        <PopoverWrapper onMouseEnter={togglePopoverVisibility} onMouseLeave={togglePopoverVisibility}>\n            {children}\n            {visible && (\n                <PopoverContainer>\n                    <PopoverImage imageURL={imageURL} />\n                </PopoverContainer>\n            )}\n        </PopoverWrapper>\n    );\n}\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n    margin: 4px 0;\n    font-weight: bold;\n    color: ${(p) => p.theme.colors.secondary};\n`;\n","import Button from 'components/Button';\nimport React, { ReactElement } from 'react';\nimport { getEllipsis, theme } from 'utils';\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport Popover from 'components/Popover';\nimport { BsFillImageFill } from 'react-icons/bs';\nimport { Text as TextComponent } from '../../Text';\n\ninterface Props {\n    description: string;\n    isExpanded?: boolean;\n    popoverImage: string;\n    onExpandToggle: () => void;\n}\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    white-space: normal;\n    padding: 0 8px;\n`;\n\nconst TextWrapper = styled.div`\n    width: 95%;\n    position: relative;\n    display: inline-block;\n`;\n\nconst Text = styled(TextComponent)`\n    @media screen and (max-width: 600px) {\n        font-size: ${(p) => p.theme.font.small};\n    }\n`;\n\nconst ExpandButton = styled(Button)`\n    margin-top: 12px;\n`;\n\nexport default function Description({ isExpanded, description, onExpandToggle, popoverImage }: Props): ReactElement {\n    const text = isExpanded ? description : getEllipsis(description);\n\n    return (\n        <Container>\n            <TextWrapper>\n                <Text>\n                    <Popover imageURL={popoverImage}>\n                        <BsFillImageFill\n                            size={18}\n                            style={{ display: 'inline-block', marginRight: 4 }}\n                            color={theme.colors.accent}\n                        />\n                    </Popover>\n                    {text}\n                </Text>\n            </TextWrapper>\n            <ExpandButton title={!isExpanded ? 'Expand' : 'Collapse'} onClick={onExpandToggle}>\n                {!isExpanded ? (\n                    <FaChevronDown color={theme.colors.accent} />\n                ) : (\n                    <FaChevronUp color={theme.colors.accent} />\n                )}\n            </ExpandButton>\n        </Container>\n    );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getRandomArrayItem, getTitleAndSubtitle } from 'utils';\nimport Description from './Description';\nimport { Text } from '../../Text';\n\ninterface Props {\n    title: string;\n    description: string;\n    mainImageURL: string;\n    images: string[];\n}\n\nconst Container = styled.div`\n    height: 100%;\n    width: 100%;\n    display: inline-block;\n`;\n\nconst ImageWrapper = styled.div`\n    height: 65%;\n    padding: 22px 0;\n`;\n\nconst Image = styled.div<Pick<Props, 'mainImageURL'>>`\n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    background: url(${(p) => p.mainImageURL}) no-repeat center;\n    background-size: contain;\n`;\n\nconst Content = styled.div`\n    height: 35%;\n    padding: 8px 22px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n`;\n\nconst TitleWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 4px 0;\n`;\n\nconst TitleText = styled(Text)`\n    text-transform: uppercase;\n    text-align: center;\n`;\n\nconst Title = styled(TitleText)`\n    font-size: ${(p) => p.theme.font.large};\n    color: ${(p) => p.theme.colors.main};\n    letter-spacing: 1px;\n`;\n\nconst Subtitle = styled(TitleText)`\n    font-size: ${(p) => p.theme.font.subtitle};\n    color: ${(p) => p.theme.colors.accent};\n`;\n\nconst Slide = ({ title: titleProp, description, mainImageURL, images }: Props): ReactElement => {\n    const [descExpanded, setDescExpanded] = useState(false);\n    const [popoverImage, setPopoverImage] = useState<string>('');\n    const { title, subtitle } = getTitleAndSubtitle(titleProp);\n\n    useEffect(() => {\n        if (!popoverImage) {\n            const img = getRandomArrayItem(images, mainImageURL);\n            setPopoverImage(img);\n        }\n    }, [images, mainImageURL, popoverImage]);\n\n    const handleExpand = () => {\n        setDescExpanded((expanded) => !expanded);\n    };\n\n    return (\n        <Container>\n            <ImageWrapper>\n                <Image mainImageURL={mainImageURL} />\n            </ImageWrapper>\n            <Content>\n                <TitleWrapper>\n                    <Title>{title}</Title>\n                    {subtitle && <Subtitle>{subtitle}</Subtitle>}\n                </TitleWrapper>\n                <Description\n                    description={description}\n                    onExpandToggle={handleExpand}\n                    isExpanded={descExpanded}\n                    popoverImage={popoverImage}\n                />\n            </Content>\n        </Container>\n    );\n};\n\nexport default Slide;\n","import ArrowButton from 'components/ArrowButton';\nimport React, { ReactElement, useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { AUTOPLAY_DURATION, Direction } from 'utils';\nimport { SlideType } from 'utils/types';\nimport Slide from './items/Slide';\n\ninterface Props {\n    slides: SlideType[];\n    autoplayInSeconds?: number;\n}\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n    width: 80%;\n    min-width: 300px;\n    height: 90%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Container = styled.div`\n    max-width: 92%;\n    width: 92%;\n    height: 100%;\n    overflow-x: hidden;\n    box-shadow: 0px 0px 12px 4px ${(p) => p.theme.colors.lightGrey};\n    border-radius: ${(p) => p.theme.cardBorderRadius};\n`;\n\nconst Carousel = styled.div<{ translation: number }>`\n    width: 100%;\n    height: 100%;\n    white-space: nowrap;\n    transform: translateX(-${(p) => p.translation * 100}%);\n    transition: ease-in-out 0.5s;\n`;\n\nexport function Slider({ slides, autoplayInSeconds = AUTOPLAY_DURATION }: Props): ReactElement {\n    const [slideIndex, setSlideIndex] = useState(0);\n    const timeoutRef = useRef<NodeJS.Timeout>();\n\n    const clearTimeoutRef = () => {\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    };\n\n    const lastSlideIdx = slides.length - 1;\n\n    const handleNextSlide = useCallback(() => {\n        clearTimeoutRef();\n\n        setSlideIndex((idx) => {\n            if (idx === lastSlideIdx) {\n                return 0;\n            }\n\n            return idx + 1;\n        });\n    }, [lastSlideIdx]);\n\n    const handlePrevSlide = useCallback(() => {\n        clearTimeoutRef();\n\n        setSlideIndex((idx) => {\n            return idx === 0 ? lastSlideIdx : idx - 1;\n        });\n    }, [lastSlideIdx]);\n\n    useEffect(() => {\n        timeoutRef.current = setTimeout(handleNextSlide, autoplayInSeconds * 1000);\n\n        return () => clearTimeoutRef();\n    }, [slideIndex, autoplayInSeconds, handleNextSlide]);\n\n    return (\n        <Wrapper>\n            <ArrowButton direction={Direction.LEFT} onClick={handlePrevSlide} />\n            <Container>\n                <Carousel translation={slideIndex}>\n                    {slides.map((slide) => {\n                        const { main_image, name, description, images, id } = slide;\n\n                        return (\n                            <Slide\n                                key={id}\n                                mainImageURL={main_image}\n                                title={name}\n                                description={description}\n                                images={images}\n                            />\n                        );\n                    })}\n                </Carousel>\n            </Container>\n            <ArrowButton direction={Direction.RIGHT} onClick={handleNextSlide} />\n        </Wrapper>\n    );\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n    position: fixed;\n    padding: 5vmin 1rem;\n    width: 100%;\n    background: ${(p) => p.theme.colors.main};\n    color: ${(p) => p.theme.colors.white};\n    text-align: center;\n    text-transform: uppercase;\n    font-size: ${(p) => p.theme.font.large};\n    font-weight: 700;\n    box-shadow: 0px 0px 12px 2px ${(p) => p.theme.colors.lightGrey};\n`;\n","import styled, { ThemeProvider } from 'styled-components';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport './App.css';\nimport { Api } from 'api/api';\nimport { SlideType } from 'utils/types';\nimport { PRODUCTS_STORAGE_KEY, theme, getStoredProducts, mapResponseDataToSlideType } from 'utils';\nimport { Slider, Header } from 'components';\n\nconst Container = styled.main`\n    margin: calc(2 * 5vmin + 2rem) auto 5vmin;\n    padding: 42px 22px 22px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n`;\n\nfunction App(): ReactElement {\n    const storedProducts = () => getStoredProducts();\n    const [products, setProducts] = useState<SlideType[]>(storedProducts);\n    const [error, setError] = useState<string | undefined>();\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const data = await Api.getProducts();\n                const products = mapResponseDataToSlideType(data);\n\n                setProducts(products);\n\n                const storageProducts = storedProducts();\n                if (!storageProducts.length) localStorage.setItem(PRODUCTS_STORAGE_KEY, JSON.stringify(products));\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        fetchProducts();\n\n        return () => Api.cancelRequest();\n    }, []);\n\n    if (error) return <div>{error}</div>;\n\n    if (!products.length && !error) return <div>Loading...</div>;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Header>Slider</Header>\n            <Container>\n                <Slider slides={products} autoplayInSeconds={5} />\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}